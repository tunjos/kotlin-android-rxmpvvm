import java.text.SimpleDateFormat

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.21'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    def versionMajor = 0
    def versionMinor = 1
    def versionPatch = 0
    def versionBuild = 0

    project.ext {
        appApplicationId = "co.tunjos.rxmpvvm"

//        appBuildToolsVersion = "28.0.3"
        appCompileSdkVersion = 28
        appMinSdkVersion = 15
        appTargetSdkVersion = 28

        appVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        appVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"

        appTestInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    ext {
        versions = [
                androidx      : [
                        appcompat       : '1.0.2',
                        constraintlayout: '1.1.3',
                        core_ktx        : '1.0.1',
                        espresso_core   : '3.1.1',
                        runner          : '1.1.1'
                ],
                assertj       : '3.12.2',
                dagger        : '2.21',
                jUnit5        : '5.4.0',
                material      : '1.0.0',
                mockito_kotlin: '2.1.0',
                okhttp        : '3.13.1',
                retrofit      : '2.5.0',
                rxAndroid     : '2.1.1',
                rxJava        : '2.2.8',
                timber        : '4.7.1',
        ]
    }
}

def static getLatestGitCommitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def static getLatestBuildTime() {
    def df = new SimpleDateFormat("dd-MM-yyyy HH:mm Z")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
