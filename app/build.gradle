apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.ext.appCompileSdkVersion

    def latestGitCommitSha = "\"${getLatestGitCommitSha()}\""
    def latestBuildTime = "\"${getLatestBuildTime()}\""

    defaultConfig {
        applicationId project.ext.appApplicationId
        minSdkVersion project.ext.appMinSdkVersion
        targetSdkVersion project.ext.appTargetSdkVersion
        versionCode project.ext.appVersionCode
        versionName project.ext.appVersionName

        testInstrumentationRunner project.ext.appTestInstrumentationRunner

        buildConfigField("String", "latestGitCommitSha", latestGitCommitSha)
        buildConfigField("String", "latestBuildTime", latestBuildTime)

        printf("\n------------- " + applicationId + " -------------")
        printf("\nversionName: " + versionName)
        printf("\nversionCode: " + versionCode)

        printf("\nlatestGitCommitSha: " + latestGitCommitSha)
        printf("\nlatestBuildTime: " + latestBuildTime + "\n\n")
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix " -" + latestGitCommitSha.tr('\"', ' ')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // 3rd party dependencies
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

    // google android dependencies
    implementation "androidx.appcompat:appcompat:$versions.androidx.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.androidx.constraintlayout"
    implementation "androidx.core:core-ktx:$versions.androidx.core_ktx"
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.material:material:$versions.material"

    // unit test dependencies
    androidTestImplementation "androidx.test:runner:$versions.androidx.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidx.espresso_core"

    // ui test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter:$versions.jUnit5"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$versions.jUnit5"
}

kapt {
//    option('-Adagger.fastInit=enabled')
    useBuildCache = true
    javacOptions {
        // Increase the max count of errors from annotation processors.
        // Default is 100.
        option("-Xmaxerrs", 500)
        option("-Xmaxwarns", 500)
        // Code formatting should be disabled only during development, not in
        // production code or continuous integration tests.
//        option('-Adagger.formatGeneratedSource=disabled')
    }

}
